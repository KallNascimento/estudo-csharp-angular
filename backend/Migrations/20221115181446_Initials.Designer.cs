// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221115181446_Initials")]
    partial class Initials
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.Data.UserTodo", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("TodoId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "TodoId");

                    b.HasIndex("TodoId");

                    b.ToTable("UsersTodos");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            TodoId = 1
                        },
                        new
                        {
                            UserId = 1,
                            TodoId = 2
                        },
                        new
                        {
                            UserId = 2,
                            TodoId = 3
                        },
                        new
                        {
                            UserId = 2,
                            TodoId = 4
                        });
                });

            modelBuilder.Entity("backend.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("TodoId")
                        .HasColumnType("integer");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TodoId");

                    b.HasIndex("userId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Saiu para entrega",
                            userId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Entrega realizada",
                            userId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Comprou o carro",
                            userId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Lavou o carro",
                            userId = 2
                        });
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "João"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Maria"
                        });
                });

            modelBuilder.Entity("backend.Data.UserTodo", b =>
                {
                    b.HasOne("backend.Models.Todo", "Todo")
                        .WithMany()
                        .HasForeignKey("TodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Todo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend.Models.Todo", b =>
                {
                    b.HasOne("backend.Models.Todo", null)
                        .WithMany("Todos")
                        .HasForeignKey("TodoId");

                    b.HasOne("backend.Models.User", "User")
                        .WithMany("Todos")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend.Models.Todo", b =>
                {
                    b.Navigation("Todos");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
